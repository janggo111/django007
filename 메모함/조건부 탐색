15일차

■ 조건부 검색(SELECT 태그)

'제목', '글쓴이', '내용' 과 같은 조건 검색을 해보도록합시다.
이러한 기능에 최적인 태그가 있습니다. 바로 select Tag 인데요. (inline tag)

- select Tag > 사용자에게 선택받는 태그, 하위에 option 태그를 배치한다~~ (선택지)
=====================================================
<form>
   <select name="cate">
         <option value="sub">제목</option>
         <option value="wri">글쓴이</option>
   </select>
</form>
=====================================================
여기서 특이한 점은 데이터를 넘길 때 name 은 select Tag 의 속성으로 
value 는 option Tag 의 속성으로 설정한다는 것입니다.


■ 탐색 또한 GET

탐색 또한 GET 전송으로 처리하는게 일반적이다.
=====================================================
<form>
   <select name="cate">
         <option value="sub">제목</option>
         <option value="wri">글쓴이</option>
   </select>
   <input name="kw">
   <button>search</button>
</form>
=====================================================
kw, cate 가 GET 전송으로 전달됨



■ 조건부 검색 (filter 조회)

DB 의 정보를 조회할 때 all() , get() 이 있었습니다.
모든 레코드들을 가져오는 all, 특정 레코드 하나만을 가져오는 get 이 있었죠.
이번에는 특정 레코드 모두를 가져오는 기능 filter 를 알아봅시다.
======================================================
def index(request):
   blist = Board.objects.filter(writer="admin")
      # writer 가 admin 인 레코드들 가져와~
   ...
======================================================

이에 덧붙여 filter 에 잘어울리는 추가적인 탐색을 알아봅시다 (예시는 writer)
=======================================
1) writer__startswith = "A"
   A 로 시작하는 글쓴이
2) writer__endswith = "A"
   A 로 끝나는 글쓴이
3) writer__contains = "A"
   A 가 포함된 글쓴이  
=======================================


■ 조건부 검색 

위 내용을 조합하면 다음과 같은 코드를 생각할 수 있다.
======================================================
def index(request):
   kw = request.GET.get("kw", "")
   cate = request.GET.get("cate", "")
   if cate == "sub":
       blist = Board.objects.filter(sub=kw)
   elif cate == "wri":
       ...
======================================================


■ 정렬탐색

간단하다. 레코드들에다가 .order_by(field명) 하면 된다.
이 때, 그냥 field 명이라면 오름차순이고, 앞에 마이너스를 붙혀주면 내림차순이 된다.
=====================================
.order_by(pubdate)      > 오래된 글 순
.order_by(-pubdate)     > 최신글 순
=====================================


■ 페이징과 조건부 검색

만약 사용자가 조건부 검색을 통해 페이징을 할 경우에도 적절한 조치를 취해주어야 한다.
kw, cate 즉, 조건부 검색을 유지하면서 페이징도 이루어져야합니다.
그래서 페이징 버튼마다 kw, cate 를 달아주어야합니다.
==================================================
...
context = {
    'kw':kw,
    'cate':cate,
}
...
==================================================

=======================================================================
...
<a href="{% url 'board:index' %}?page={{pg}}&cate={{cate}}&kw={{kw}}"
...
=======================================================================

